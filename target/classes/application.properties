spring.application.name=backend_prueba

spring.datasource.url = jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}

spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

spring.user.datasource.driver-class-name=com.mysql.jdbc.driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform

# Configuraci�n de la ruta del gateway
spring.cloud.gateway.routes[0].id=rate_limited_route
spring.cloud.gateway.routes[0].uri=http://localhost:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/**
spring.cloud.gateway.routes[0].filters[0]=RequestRateLimiter=redis-rate-limiter.enabled=true,redis-rate-limiter.replenishRate=2,redis-rate-limiter.burstCapacity=10

# Configuraci�n de Redis (si usas Redis)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=  # Si no tienes contrase�a, d�jalo vac�o
spring.data.redis.timeout=2000
